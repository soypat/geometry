// DO NOT EDIT.
// This file was generated automatically
// from gen.go. Please do not edit this file.

package md3

import (
	ms1 "github.com/soypat/geometry/md1"
)

// AppendGrid splits the argument bounds [Box] x,y,z axes by nx,ny,nz, respectively
// and generates points on the vertices generated by the division and appends them to dst, returning the result.
// All box edges are vertices in result. AppendGrid panics if it receives a dimension less than 2.
//
// Indexing is x-major, y-second-major:
//
//	grid := ms3.AppendGrid(nil, domain, nx, ny, nz)
//	ix, iy, iz := 1, 0, 3
//	pos := grid[iz*(nx+ny) + iy*nx + ix]
func AppendGrid(dst []Vec, domain Box, nx, ny, nz int) []Vec {
	if nx <= 1 || ny <= 1 || nz <= 1 {
		panic("AppendGrid needs more grid subdivisions")
	}
	nxyz := Vec{X: float64(nx - 1), Y: float64(ny - 1), Z: float64(nz - 1)}
	dxyz := DivElem(domain.Size(), nxyz)
	var xyz Vec
	for k := 0; k < nz; k++ {
		xyz.Z = domain.Min.Z + dxyz.Z*float64(k)
		for j := 0; j < ny; j++ {
			xyz.Y = domain.Min.Y + dxyz.Y*float64(j)
			for i := 0; i < nx; i++ {
				xyz.X = domain.Min.X + dxyz.X*float64(i)
				dst = append(dst, xyz)
			}
		}
	}
	return dst
}

// GridSubdomain facilitates obtaining the set of points in a grid shared between a domain box
// and a subdomain box contained within the domain box. Points of the grid should
// be ordered in x-major, y-second-major format, like the values returned by [AppendGrid].
//
//	istart, nxSub, nySub, nzSub := GridSubdomain(domain, nx, ny, nz, subdomain)
//	for iz := 0; iz < nzSub; iz++ {
//		offz := istart + iz*(nx+ny)
//		for iy := 0; iy < nySub; iy++ {
//			off := offz + iy*nx
//			for ix := 0; ix < nxSub; ix++ {
//				pointInSubdomain := grid[off+ix]
//				// do something with pointInSubdomain.
//			}
//		}
//	}
func GridSubdomain(domain Box, nxDomain, nyDomain, nzDomain int, subdomain Box) (iStart, nxSub, nySub, nzSub int) {
	if !domain.ContainsBox(subdomain) {
		panic("subdomain not contained in domain")
	}
	var ix0, iy0, iz0 int
	ix0, nxSub = ms1.GridSubdomain(domain.Min.X, domain.Max.X, nxDomain, subdomain.Min.X, subdomain.Max.X)
	iy0, nySub = ms1.GridSubdomain(domain.Min.Y, domain.Max.Y, nyDomain, subdomain.Min.Y, subdomain.Max.Y)
	iz0, nzSub = ms1.GridSubdomain(domain.Min.Z, domain.Max.Z, nzDomain, subdomain.Min.Z, subdomain.Max.Z)
	return ix0 + iy0*nxDomain + iz0*(nxDomain+nyDomain), nxSub, nySub, nzSub
}
